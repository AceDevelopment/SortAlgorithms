package sortingalgorithms;

import java.util.Random;

/**
 *
 * @author Aman
 */
public class Sort {
	// swap the ith element with the jth elements.
	private void  swap(int[] a, int i, int j){
		int temp; 
		temp = a[i]; a[i] = a[j]; a[j] = temp;
	}
	// initialize the array a with elements from 0 to size-1. 
	public void  initializeArray(int[] a, int size){
		for (int i=0; i<size; i++){
			a[i]=i;
		}
	}
	
	// display the elements in the array a, 10 elements per row. 
	public void  displayArray(int[] a, int size){
		for (int i=0; i<size; i++){
			if(i%10==0){
				System.out.println();
			}
			System.out.print(a[i]+ " ");
		}
		System.out.println();
	}
	
	 // randomly swap two elements in array a for SWAPTIMES times. 
	 public void randomizeArray(int[] a, int size){
		final int SWAPTIMES = 10000;
		Random r = new Random();
        int j, k;
        for(int i=0; i< SWAPTIMES; i++){
    	    j = r.nextInt(size);
	        k = r.nextInt(size);
	        this.swap(a,  j, k);
        }
	}
	

	// insertionSort.	
	 public void  insertionSort(int[] a, int size){
	    for( int i = 1; i < a.length; i++){
                
                int temp = a[i];
                
                int j = i;
                
                while(j > 0 && a[j - 1] > temp){
                    
                    a[j] = a[j - 1];
                    
                    j--;
                    
                }
                
                a[j] = temp;
                
            }	
	}
	
	// bubbleSort.
	public void bubbleSort(int a[], int size){
	    int r;
            
            boolean flag = true;
            int temp;
            
            while (flag == true){
                
                flag = false;
                for(r = 0; r < size - 1; r++)
                {
                    if(a[r] > a[r + 1]){
                        
                        temp = a[r];
                        a[r] = a[r + 1];
                        a[r + 1] = temp;
                        flag = true;
                    }
                }
                
            }
	}
	
	// selectionSort
	public void selectionSort(int a[], int size) {
            
            for(int i = 0; i < a.length - 1; i++){
                
                int index = i;
                
                for(int j = i + 1; j < a.length; j++){
                    
                    if(a[j] < a[index])
                        
                        index = j;
                    
                }
                
                int temp = a[index];
                a[index] = a[i];
                a[i] = temp;
                
            }
	}


}   
